# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# https://github.com/mozilla-services/Dockerflow/blob/master/.circleci/config.yml
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER    - login info for docker hub
# DOCKER_PASS

version: 2
jobs:
  build:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - run: 
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update
      - setup_remote_docker
      - run:
          name: Create a version.json
          command: |
            # create a version.json per https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json
      - run:
          name: Build staged images
          command: |
            docker build --target development -t prio:dev .
            docker build --target production -t prio:prod .
      - run:
          name: Save image into cache
          command: |
            mkdir -p /cache
            docker save -o /cache/dev.tar "prio:dev"
            docker save -p /cache/prod.tar "prio:prod"
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /cache/dev.tar
            - /cache/prod.tar

  test:
    docker:
      - image: docker:stable-git
      - restore_cache:
          key: v1-{{ .Branch }}
      - run:
          name: Restore cache
          command: |
            docker load -i /cache/dev.tar
            docker load -i /cache/prod.tar
      - run:
          name: Test Code
          command: docker run prio:dev
      - run:
          name: Integration Code
          command: docker run prio:prod scripts/test-cli-integration
  
  deploy:
    test:
      docker:
        - image: docker:stable-git
        - restore_cache:
            key: v1-{{ .Branch }}
        - run:
            name: Restore cache
            command: docker load -i /cache/prod.tar
        - run:
            name: Deploy to Dockerhub
            command: |
              echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
              # deploy master
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                docker tag app:build ${DOCKERHUB_REPO}:latest
                docker push ${DOCKERHUB_REPO}:latest
              elif  [ ! -z "${CIRCLE_TAG}" ]; then
              # deploy a release tag...
                echo "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
                docker tag app:build "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
                docker images
                docker push "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              fi

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
            - test
          filters:
            tags:
              only: /.*/
            branches:
              only: master
